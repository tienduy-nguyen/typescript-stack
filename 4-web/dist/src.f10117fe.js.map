{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAEA,IAAM,IAAI,GAAG,IAAI,MAAA,CAAA,IAAJ,CAAS;AAAE,EAAA,IAAI,EAAE,QAAR;AAAkB,EAAA,GAAG,EAAE;AAAvB,CAAT,CAAb;AACA,ADGA,ICHI,ADGE,CCHD,EAAL,CAAQ,GDGK,GAAG,ECHhB,EAAkB,YAAK,aDGvB;ACFE,EAAA,OAAO,CAAC,GAAR,CAAY,WAAZ;AACD,CAFD,GDKa;ACFb,ADIE,ICJE,CAAC,EAAL,CAAQ,QAAR,ADIsB,ECJJ,EDIhB,EAAmC,QCJd;AACrB,ADGmC,ECHnC,OAAO,CAAC,GAAR,CAAY,WAAZ;AACD,CAFD;AAGA,ADCsB,ICDlB,CAAC,EAAL,CAAQ,CDCc,IAAA,CCDtB,EAAgB,ADCM,IAAA,QCDD;AACnB,ADDA,ECCA,OAAO,ADDP,CCCQ,GAAR,CAAY,CDDZ,GAAwC,EAAxC,CACmC,CADS,YCC5C;AACD,ADDwC,CCDzC;AAGA,IAAI,CAAC,OAAL,CAAa,QAAb;AACA,OAAO,CAAC,GAAR,CAAY,IAAZ;;wBDFM,UAAgB;AAClB,aAAO,EAAP;AACD;;;wBACG,QAAiB;AACnB,MAAA,MAAM,CAAC,MAAP,CAAc,KAAK,IAAnB,EAAyB,MAAzB;AACD,MAED;;;;uBACG,WAAmB,UAAkB;AACtC,UAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,KAA0B,EAA3C,CADsC,CACS;;AAC/C,MAAA,QAAQ,CAAC,IAAT,CAAc,QAAd;AACA,WAAK,MAAL,CAAY,SAAZ,IAAyB,QAAzB;AACD,MAED;;;;4BACQ,WAAiB;AACvB,UAAM,QAAQ,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAjB;AAEA,UAAI,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAT,KAAoB,CAArC,EAAwC;AACxC,MAAA,QAAQ,CAAC,OAAT,CAAiB,UAAC,QAAD,EAAa;AAC5B,QAAA,QAAQ;AACT,OAFD;AAGD;;;;;;AAzBH,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["export interface UserProps {\n  id?: number;\n  name?: string;\n  age?: number;\n}\n\nconst rootUrl = 'http://localhost:3000/users';\ntype Callback = () => void; // A function take no argument and return a void\nexport class User {\n  events: { [key: string]: Callback[] } = {}; // assign key index\n  constructor(private data: UserProps) {}\n  get(propName: string): number | string {\n    return '';\n  }\n  set(update: UserProps): void {\n    Object.assign(this.data, update);\n  }\n\n  //Event\n  on(eventName: string, callback: Callback): void {\n    const handlers = this.events[eventName] || []; // Calback[] or undefined\n    handlers.push(callback);\n    this.events[eventName] = handlers;\n  }\n\n  // Trigger events\n  trigger(eventName: string): void {\n    const handlers = this.events[eventName];\n\n    if (!handlers || handlers.length === 0) return;\n    handlers.forEach((callback) => {\n      callback();\n    });\n  }\n}\n","import { User } from './models/User';\n\nconst user = new User({ name: 'myname', age: 20 });\nuser.on('change', () => {\n  console.log('Change #1');\n});\nuser.on('change', () => {\n  console.log('Change #2');\n});\nuser.on('save', () => {\n  console.log('Save was triggered');\n});\nuser.trigger('change');\nconsole.log(user);\n"]}